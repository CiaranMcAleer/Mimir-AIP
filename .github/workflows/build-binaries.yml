name: Build & Package Binaries

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ['3.10']
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build with PyInstaller (one-dir + include data)
        run: |
          pyinstaller \
            --clean \
            --onedir \
            --name mimir-aip-${{ matrix.os }} \
            --add-data config.yaml${{ matrix.os == 'windows-latest' && ';' || ':' }}. \
            --add-data src/pipelines${{ matrix.os == 'windows-latest' && ';' || ':' }}pipelines \
            --add-data src/Plugins${{ matrix.os == 'windows-latest' && ';' || ':' }}Plugins \
            src/main.py

      - name: Zip platform bundle
        run: |
          cd dist
          zip -r ../mimir-aip-${{ matrix.os }}.zip mimir-aip-${{ matrix.os }} src/pipelines config.yaml src/Plugins
          cd ..

      - name: Create GitHub Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: mimir-aip-${{ matrix.os }}.zip
          asset_name: mimir-aip-${{ matrix.os }}.zip
          asset_content_type: application/zip
